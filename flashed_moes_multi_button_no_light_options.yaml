blueprint:
  name: Custom Moe's Zigbee Switch - Detached Mode - Basic - NO Light Options
  description: >
    # ‚ú≥Ô∏è Button Switch - Turn ON & OFF Lights with one or more buttons

    - Allows multiple toggle switches to control the same set of entities.

    - Triggers on `released` ‚Üí `press` (e.g. flashed Moe‚Äôs Zigbee buttons).
    
    - Toggles `main_entity` on/off.
    
    - Optionally toggles `alternating_entity` to the inverse of `main_entity`.
    
    - ‚úÖ Works well for momentary buttons that emit "press" events.
    
    - üîÅ Can be reused with different button groups for various lights.

    - **IMPORTANT - Ensure that for each button (referred to below as a toggle switch), you have the following settings enabled in Z2M for that particular button:**
    
    - "switch mode" = "MOMENTARY"
    
    - "switch action mode" = "TOGGLE"

    - **IMPORTANT - Ensure that for each LIGHT that you want to control in this automation, you have the following settings enabled in Z2M for the relay or relays that feed power to the lights:**
    
    - "switch relay mode" = "DETACHED"
    
    - "state" = ON
    
    - "power-on behaviour" = ON

  domain: automation

  input:
    toggle_switch:
      name: Toggle Switch(es) *
      description: One or more switches (e.g. Zigbee buttons) that control the entities.
      selector:
        entity:
          domain: sensor
          multiple: true

    main_entity:
      name: Light(s) *
      description: Select the single or group light entity (or entities) your button/s to control simultaneously.
      selector:
        entity:
          domain: light
          multiple: true

    alternating_entity:
      name: LED Indicator(s)
      description: Optional - Enable this to automatically sync LED indicator(s) to reflect the *opposite* state to that of the selected light(s). You must set the relay indicator mode for each of the corresponding toggle switch(es) to "manual" in Z2M in order for this part of the automation to function properly. See above instructions relating to `IMPORTANT`.
      default: []
      selector:
        entity:
          domain: switch
          multiple: true

variables:
  toggle_switch: !input toggle_switch
  main_entity: !input main_entity
  alternating_entity: !input alternating_entity

trigger:
  - platform: state
    entity_id: !input toggle_switch
    from: "released"
    to: "press"

action:
  - service: system_log.write
    data:
      message: "Toggle switch pressed: {{ trigger.entity_id }}"
      level: warning

  - choose:
      - alias: "If no alternating entity is set"
        conditions:
          - "{{ alternating_entity == [] }}"
        sequence:
          - choose:
              - alias: "Any main entities are on ‚Üí turn them off"
                conditions:
                  - condition: state
                    entity_id: !input main_entity
                    match: any
                    state: 'on'
                sequence:
                  - service: homeassistant.turn_off
                    target:
                      entity_id: !input main_entity

              - alias: "All main entities are off ‚Üí turn them on"
                conditions:
                  - condition: state
                    entity_id: !input main_entity
                    match: all
                    state: 'off'
                sequence:
                  - service: homeassistant.turn_on
                    target:
                      entity_id: !input main_entity

    default:
      - choose:
          - alias: "Any main entities are on ‚Üí turn off main, turn on alternating"
            conditions:
              - condition: state
                entity_id: !input main_entity
                match: any
                state: 'on'
            sequence:
              - service: homeassistant.turn_off
                target:
                  entity_id: !input main_entity
              - service: homeassistant.turn_on
                target:
                  entity_id: !input alternating_entity

          - alias: "All main entities are off ‚Üí turn on main, turn off alternating"
            conditions:
              - condition: state
                entity_id: !input main_entity
                match: all
                state: 'off'
            sequence:
              - service: homeassistant.turn_on
                target:
                  entity_id: !input main_entity
              - service: homeassistant.turn_off
                target:
                  entity_id: !input alternating_entity

mode: single
